<style lang="scss" rel="stylesheet/scss">
  @import '../../assets/scss/index.scss';
  page {
    @include flex-y-middle();
    input {
      background-color: transparent;
      border-bottom: 1px solid #666;
    }

    .mobile-section {
      @include flex-center();
      width: 500rpx;
      margin-top: 100rpx;
      font-size: $xg-size-5;
      .input-wrapper {
        @include flex(1);
        padding-left: 20rpx;
        input {
          width: 100%;
          height: 60rpx;
          line-height: 60rpx;
          font-size: $xg-size-5;
          padding: 0 10rpx;
        }
      }
    }

    .verify-section {
      width: 500rpx;
      margin-top: 60rpx;
      @include flex-x-middle();
      font-size: $xg-size-5;
      .input-wrapper {
        @include flex(1);
        padding-right: 20rpx;
        input {
          width: 100%;
          height: 60rpx;
          line-height: 60rpx;
          font-size: $xg-size-5;
          padding: 0 10rpx;
        }
      }
       .btn{
        width: 180rpx;
        font-size: $xg-size-5;
        display: inline-block;
        height: 60rpx;
        line-height: 60rpx;
        background-color: $xg-c-red;
        color: #fff;
        text-align: center;
        &.djs {
          background-color: #dfdfdf;
        }
      }
    }

    .login {
      width: 400rpx;
      height: 70rpx;
      line-height: 70rpx;
      font-size: $size-6;
      color: #fff;
      background: $xg-c-red;
      margin-top: 300rpx;
    }
  }
</style>
<template>
  <view class="mobile-section">
    <text>手机号</text>
    <view class="input-wrapper">
      <input type="number" value="{{mobile}}" @blur="inputMobile" maxlength="11"/>
    </view>
  </view>
  <view class="verify-section">
    <view class="input-wrapper">
      <input type="number" value="{{verifyCode}}" @blur="inputVerifyCode"/>
    </view>
    <view class="btn djs" wx:if="{{showDJS}}">{{timeout}}s</view>
    <view wx:else class="btn" @tap="onClickVerify">获取验证码</view>
  </view>
  <button class="login" @tap="onClickLogin">提交</button>
</template>

<script>
  import wepy from 'wepy'
  import {connect} from 'wepy-redux'
  import StringTool from '../../tool/StringTool'
  import NetworkManagerAuth from '../../network/NetworkManagerAuth'

  @connect({
    userInfo (state) {
      return state.user.userInfo
    }
  })
  export default class Login extends wepy.page {
    config = {
      navigationBarTitleText: '登录'
    }
    components = {}

    data = {
      mobile: '',
      verifyCode: '',
      timeout: 60,
      showDJS: false,
      verifyKey: '',
      djs: {},
      userInfo: {}
    }

    computed = {}

    methods = {
      inputMobile(e) {
        this.mobile = e.detail.value;
        this.$apply();
      },
      inputVerifyCode(e) {
        this.verifyCode = e.detail.value;
        this.$apply();
      },
      onClickLogin() {
        if (!StringTool.isMobile(this.mobile)) {
          wepy.showToast({title: '请输入正确的手机号', icon: 'none'});
          return
        }
        if (!StringTool.isVerifyCode(this.verifyCode)) {
          wepy.showToast({title: '请输入正确验证码', icon: 'none'});
          return
        }
        wepy.showNavigationBarLoading();
        NetworkManagerAuth.userLogin('mobile', this.mobile, this.verifyCode, this.userInfo.openId, this.userInfo.nickName, this.mobile, this.verifyKey)
          .then(data => {
            wepy.$instance.globalData.authToken = 'Bearer ' + data.access_token;
            wepy.$instance.globalData.authData = data;
            NetworkManagerAuth.getUserInfo()
                .then(data => {
                  wepy.hideNavigationBarLoading();
                  wepy.$instance.globalData.userInfo = data;
                  wepy.$instance.globalData.hasLogin = data;
                  wepy.navigateBack()
                }, err => {
                  wepy.showToast({title: err.message, icon: 'none'})
                  wepy.hideNavigationBarLoading();
                })
          }, err => {
            wepy.hideNavigationBarLoading();
            wepy.showToast({title: err.message, icon: 'none'})
          })
      },
      onClickVerify() {
        if (!StringTool.isMobile(this.mobile)) {
          wepy.showToast({title: '请输入正确的手机号', icon: 'none'});
          return
        }
        wepy.showNavigationBarLoading();
        NetworkManagerAuth.getVerifyCode(this.mobile, this.userInfo.openId)
          .then(data => {
            wepy.hideNavigationBarLoading();
              this.verifyKey = data.data;
        this.showDJS = true;
        this.$apply();
        this.djs = setInterval(() => {
            if (this.timeout === 1) {
          this.showDJS = false;
          this.timeout = 60;
          this.$apply();
          clearInterval(this.djs);
          return
        }
        this.timeout--
        this.$apply();
      }, 1000)
          }, err => {
            wepy.hideNavigationBarLoading();
            wepy.showToast({title: err.message, icon: 'none'})
          })
      }
    }

    onLoad() {
        this.userInfo = wepy.$instance.globalData.userInfo;
        this.$apply();
    }

    onUnload() {
      clearInterval(this.djs);
    }
  }
</script>
