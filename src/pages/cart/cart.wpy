<style lang="scss" rel="stylesheet/scss">
  @import '../../assets/scss/index.scss';
  .cart{
    .cart-area {
      .tips {
        @include flex-x-middle();
        @include flex-justify-content_space-between();
        padding: 0 30rpx;
        height: 80rpx;
        font-size: $xg-size-2;
        color: #999;
        view {
          @include flex-x-middle();
          image {
            width: 8rpx;
            height: 8rpx;
            margin-right: 10rpx;
          }
        }
      }
      padding-bottom: $tab-bar-height;
      background: $color-back;
      .cart-item {
        height: 190rpx;
        background: #fff;
        margin-bottom: 20rpx;
        padding: 30rpx 30rpx 30rpx 0;
        @include flex-x-middle();
        .edit-select-space {
          padding: 0 30rpx;
          height: 100%;
          @include flex-center();
          .select-icon {
            width: 34rpx;
            height: 34rpx;
          }
        }
        .icon {
          margin-left: 10rpx;
          width: 140rpx;
          height: 140rpx;
        }
        .content {
          margin-left: 20rpx;
          flex: 1;
          .name {
            @include ellipsis();
            font-size: $xg-size-4;
            color: #333;
          }
          .cart-dim {
            @include ellipsis(2);
            font-size: $xg-size-2;
            color: #999;
            margin-top: .1rem;
            label {
              margin-right: .1rem;
            }
          }
          .info {
            margin-top: 10rpx;
            height: 50rpx;
            line-height: 50rpx;
            .price {
              flex: 1;
              color: $xg-c-red;
              font-weight: bold;
              font-size: $xg-size-5;
            }
            input {
              min-height: 0;
            }
            .input {
              @include flex-x-middle();
              z-index: 0;
              .count-button {
                @include flex(none);
                @include flex-center();
                height: 48rpx;
                line-height: 48rpx;
                width: 52rpx;
                border-radius: 0 4rpx 4rpx 0;
                border: 1px solid #999999;
                font-size: $xg-size-4;
                font-weight: bold;
                color: #999999;
                border-left-width: 0;
              }
              .count-button:first-of-type {
                  border-radius: 4rpx 0 0 4rpx;
                  border-right: 0;
                  border-left-width: 1rpx;
              }
              .count-number {
                @include flex(none);
                @include flex-center();
                text-align: center;
                border: 1px solid #999;
                height: 48rpx;
                line-height: 48rpx;
                width: 70rpx;
                font-weight: bold;
                outline: 0;
              }
            }
          }
        }
      }
    }

    .pay-area {
      @include flex-x-middle();
      background: #fff;
      position: fixed;
      bottom: 0;
      left: 0;
      width: 100%;
      height: 88rpx;
      text-align: center;
      font-size: $xg-size-4;
      color: #999;
      .select {
        padding-left: 30rpx;
        .select-icon {
          width: 34rpx;
          height: 34rpx;
          margin-right: 30rpx;
        }
        height: 100%;
      }
      .amount {
        @include flex(1);
        @include flex-x-middle();
        @include flex-justify-content_flex-end();
        padding-right: 40rpx;
        .price {
          color: $xg-c-red;
          font-weight: bold;
          margin-left: 10rpx;
        }
      }
      .pay {
        width: 212rpx;
        font-size: $xg-size-4;
        line-height: 88rpx;
        background: $xg-c-red;
        color: white;
        font-weight: bold;
        border-radius: 0;
        outline: 0;
        &.disabled {
          background-color: #ccc;
        }
      }
    }
  }
</style>
<template>
  <wxs src="./wxs/cart.wxs" module="cartWxs"></wxs>
  <view class="cart">
    <view class="cart-area top-seg">
      <view class="tips">
        <repeat for="{{tips}}">
          <view>
            <image src="./img/yuan.png" alt="">
            </image>
            <text>{{item}}</text>
          </view>
        </repeat>
      </view>
      <repeat for="{{goodsList}}"
              item="goods"
              key="goods.skuId">
        <view class="cart-item">
          <label wx:if="{{isEditing}}" @tap="delGoods(goods)">
            删除
          </label>
          <label class="edit-select-space flex-center-x"
                 data-goods="{{goods}}"
                 @tap="actionClickGoodsSelected">
            <image wx:if="{{cartWxs.isSelected(selectedList,goods)}}"
                   class="select-icon"
                   src="./img/gouxuan.png">
            </image>
            <image wx:else
                   class="select-icon"
                   src="./img/meixuan.png">
            </image>
          </label>
          <image mode="aspectFit" class="icon" src="{{goods.goodsImg}}" alt="">
          </image>
          <view class="content flex-y">
            <label class="name ellipsis-2">
              {{goods.name}}
            </label>
            <view class="info flex-middle-x">
              <div class="price">￥{{cartWxs.formatFenPrice(goods.nbPrice)}}</div>
              <view class="input flex-middle-x">
                <label class="count-button" data-goods="{{goods}}" @tap="actionClickMinus">-</label>
                <input
                  class="count-number"
                  type="number"
                  value="{{goods.num}}" @blur="changeNum" data-goods="{{goods}}"/>
                <label class="count-button" data-goods="{{goods}}" @tap="actionClickPlus">+</label>
              </view>
            </view>
          </view>
        </view>
      </repeat>
    </view>
    <view class="pay-area">
      <view class="select flex-center-x"
           @tap="actionClickSelectAll">
        <image wx:if="{{isSelectedAll}}"
             class="select-icon"
             src="./img/gouxuan.png">
        </image>
        <image wx:else
             class="select-icon"
             src="./img/meixuan.png">
        </image>
        <view wx:if="{{selectedCount === 0}}">全选</view>
        <view wx:else>已选({{selectedCount}})</view>
      </view>
      <view class="amount">
        合计:<text class="price">￥{{cartWxs.formatFenPrice(totalPrice)}}</text>
      </view>
      <button class="pay {{selectedCount===0?'disabled':''}}"
              @tap="onClickPay">下单</button>
    </view>
  </view>
</template>

<script>
  import wepy from 'wepy'
  import NetworkManagerCart from '../../network/NetworkManagerCart';
  import UnitTool from '../../tool/UnitTool';
  export default class Cart extends wepy.page {
    config = {
      navigationBarTitleText: '购物车'
    }
    components = {
    }

    data = {
      isEditing: false,
      selectedList: [],
      goodsList: [],
      tips: [
        '7天无忧退货',
        '48小时快速退款',
        '满88元免邮费'
      ]
    }

    computed = {
      selectedCount(){
        return this.selectedList.length;
      },
      totalPrice(){
        let total = 0;
        this.selectedList.forEach(item => {
          total += item.nbPrice * item.num;
        })
        return total;
      },
      isSelectedAll() {
          return this.selectedCount === this.goodsList.length;
      }
    }

    methods = {
      actionClickGoodsSelected(e){
        let goods = e.currentTarget.dataset.goods;
        console.log(goods);
        if (this.selectedList.findIndex(item => {
            return item.cartId === goods.cartId;
          }) >= 0) {
          console.log('好')
          this.selectedList.splice(this.selectedList.findIndex(item => item.cartId === goods.cartId), 1)
        } else {
          this.selectedList.push(goods)
        }
        this.$apply();
      },
      actionClickSelectAll() {
        if (this.selectedList.length === this.goodsList.length) {
          this.selectedList = [];
        } else {
//          数组深拷贝
          [...this.selectedList] = this.goodsList;
        }
        this.$apply();
      },
      actionClickMinus(e) {
        let goods = e.currentTarget.dataset.goods;
        if (goods.num === 1) {
          return;
        }
        let params = {
          'skuReqs': [
            {
              'num': 1,
              'skuId': goods.skuId
            }
          ]
        }
        NetworkManagerCart.deleteCartGoods(params).then(success => {
//          更新购物车数据
          NetworkManagerCart.fetchCartGoods().then(data => {
            this.goodsList = data.skus;
            /* 因为商品数量更新的原因要更新整个列表
             * 在已选择栏中删除旧数据 添加新数据 */
            let targetIndex = this.selectedList.findIndex(item => item.skuId === goods.skuId);
            if (targetIndex >= 0) {
              this.selectedList.splice(
                this.selectedList.findIndex(item => item.skuId === goods.skuId), 1,
                data.skus.find(i => {
                  return i.skuId === goods.skuId;
                }))
            } else {
              this.selectedList.push(this.goodsList.find(i => {
                return i.skuId === goods.skuId;
              }))
            }
            this.$apply();
          }, err => {
          })
        }, err => {
        })
      },
      actionClickPlus(e) {
        let goods = e.currentTarget.dataset.goods;
        let params = {
          'skuReqs': [
            {
              'num': 1,
              'skuId': goods.skuId
            }
          ]
        }
        NetworkManagerCart.addCart(params).then(success => {
//          更新购物车数据
          NetworkManagerCart.fetchCartGoods().then(data => {
            this.goodsList = data.skus;
            this.$apply();
            /* 因为商品数量更新的原因要更新整个列表
             * 在已选择栏中删除旧数据 添加新数据
             */
            let targetIndex = this.selectedList.findIndex(item => item.skuId === goods.skuId);
            if (targetIndex >= 0) {
              this.selectedList.splice(
                this.selectedList.findIndex(item => item.skuId === goods.skuId), 1,
                data.skus.find(i => {
                  return i.skuId === goods.skuId;
                }))
            } else {
              this.selectedList.push(this.goodsList.find(i => {
                return i.skuId === goods.skuId;
              }))
            }
            this.$apply();
          }, err => {
            console.log(err)
          })
        }, err => {
          console.log(err)
        })
      },
      changeNum(e) {
        let newVal = e.detail.value;
        let cart = e.currentTarget.dataset.goods;
        let difference = newVal - cart.num;
        let params = {
          'skuReqs': [
            {
              'num': Math.abs(difference),
              'skuId': cart.skuId
            }
          ]
        }
        if (difference > 0) {
          NetworkManagerCart.addCart(params).then(data => {
//          更新购物车数据
            NetworkManagerCart.fetchCartGoods().then(data => {
              this.goodsList = data.skus;
              /* 因为商品数量更新的原因要更新整个列表
               * 在已选择栏中删除旧数据 添加新数据
               */
              let targetIndex = this.selectedList.findIndex(item => item.skuId === cart.skuId);
              if (targetIndex >= 0) {
                this.selectedList.splice(
                  this.selectedList.findIndex(item => item.skuId === cart.skuId), 1,
                  data.skus.find(i => {
                    return i.skuId === cart.skuId;
                  }))
              } else {
                this.selectedList.push(this.goodsList.find(i => {
                  return i.skuId === cart.skuId;
                }))
              }
              this.$apply();
            }, err => {
              console.log(err)
              this.closeLoading();
            })
          }, err => {
            console.log(err)
            this.closeLoading();
          })
        } else {
          NetworkManagerCart.deleteCartGoods(params).then(data => {
//          更新购物车数据
            NetworkManagerCart.fetchCartGoods().then(data => {
              this.goodsList = data.skus;
              /* 因为商品数量更新的原因要更新整个列表
               * 在已选择栏中删除旧数据 添加新数据 */
              let targetIndex = this.selectedList.findIndex(item => item.skuId === cart.skuId);
              if (targetIndex >= 0) {
                this.selectedList.splice(
                  this.selectedList.findIndex(item => item.skuId === cart.skuId), 1,
                  data.skus.find(i => {
                    return i.skuId === cart.skuId;
                  }))
              } else {
                this.selectedList.push(this.goodsList.find(i => {
                  return i.skuId === cart.skuId;
                }))
              }
              this.$apply();
            }, err => {
              console.log(err)
            })
          }, err => {
            console.log(err)
          })
        }
      },
      onClickPay() {
        if (this.selectedList.length === 0) {
          return
        }
        let payInfo = JSON.stringify({
          total: this.totalPrice,
          selectedList: this.selectedList
        })
        wepy.navigateTo({
          url: '../payment/payment?payInfo=' + payInfo
        })
      }
    }
    fetchGoodsList() {
      NetworkManagerCart.fetchCartGoods().then(data => {
        let selectedJudgeMap = {};
        let goodsCountList = {};
        let goodsKeyList = {};
        for (let goods of data.skus) {
          selectedJudgeMap[goods.skuId] = false;
          goodsCountList[goods.skuId] = goods.num;
          goodsKeyList[goods.skuId] = goods;
        }
        this.goodsList = data.skus;
        this.$apply();
        console.log(data)
      }, err => {
        console.log(err)
      })
    }

    onShow() {
      this.fetchGoodsList();
    }
  }
</script>
