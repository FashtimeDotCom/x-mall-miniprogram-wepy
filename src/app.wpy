<style lang="scss">
  @import './assets/scss/index.scss';
  .container {
    height: 100%;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: space-between;
    box-sizing: border-box;
  }
  .page {
    background: #f6f6f6;
    font-size: 30rpx;
    color: $color-1;
  }
</style>

<script>
  import wepy from 'wepy'
  import 'wepy-async-function'

  import { setStore } from 'wepy-redux'
  import configStore from './store'
  import {UPDATE_USER_INFO} from './store/types/user'

  const store = configStore()
  setStore(store)
  Array.prototype.contains = function (el) {
    return this.indexOf(el) !== -1
  }

  export default class extends wepy.app {
    config = {
      pages: [
        // 'pages/other/other',
        'pages/main/goods-detail',
        'pages/main/main',
        'pages/category/category',
        'pages/cart/cart',
        'pages/mine/mine'
      ],
      window: {
        backgroundTextStyle: 'light',
        navigationBarBackgroundColor: '#fff',
        navigationBarTitleText: 'WeChat',
        navigationBarTextStyle: 'black'
      },
      tabBar: {
        color: '#a9b7b7',
        selectedColor: '#FF9900',
        borderStyle: 'black',
        list: [
          {
            selectedIconPath: 'assets/main/main-ed.png',
            iconPath: 'assets/main/main.png',
            pagePath: 'pages/main/main',
            text: '首页'
          },
          {
            selectedIconPath: 'assets/main/category-ed.png',
            iconPath: 'assets/main/category.png',
            pagePath: 'pages/category/category',
            text: '分类'
          },
          {
            selectedIconPath: 'assets/main/cart-ed.png',
            iconPath: 'assets/main/cart.png',
            pagePath: 'pages/cart/cart',
            text: '购物车'
          },
          {
            selectedIconPath: 'assets/main/mine-ed.png',
            iconPath: 'assets/main/mine.png',
            pagePath: 'pages/mine/mine',
            text: '我的'
          }
        ]
      }
    }
    globalData = {
      userInfo: null
    }

    constructor () {
      super()
      this.use('requestfix')
    }

    onLaunch(options) {
      this.testAsync()
      wepy.getSystemInfo({
        success: function (object) {
          console.log(object);
        }
      })
    }

    sleep (s) {
      return new Promise((resolve, reject) => {
        setTimeout(() => {
          resolve('promise resolved')
        }, s * 1000)
      })
    }

    async testAsync () {
      const data = await this.sleep(3);
      console.log(data)
    }

    getUserInfo(cb) {
      const that = this
      if (this.globalData.userInfo) {
        return this.globalData.userInfo
      }

      wepy.getUserInfo({
        success (res) {
          that.globalData.userInfo = res.userInfo
          cb && cb(res.userInfo)
          store.dispatch({
            type: UPDATE_USER_INFO,
            userInfo: res.userInfo
          });
        }
      })
    }
  }
</script>
